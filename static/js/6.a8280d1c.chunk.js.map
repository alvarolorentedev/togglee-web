{"version":3,"sources":["views/shared/components/HighlightedInformation.js","views/shared/functions/smoothScrollTop.js","services/user.js","views/shared/components/PropsRoute.js","views/shared/components/NavigationDrawer.js","views/shared/components/EnhancedTableHead.js","views/logged_in/components/dashboard/Toggles.js","views/logged_in/components/dashboard/AccountInformationArea.js","views/logged_in/components/dashboard/Dashboard.js","views/logged_in/components/Routing.js","views/logged_in/components/navigation/NavBar.js","views/shared/components/ConsecutiveSnackbarMessages.js","views/logged_in/dummy_data/persons.js","services/project.js","views/logged_in/components/Main.js"],"names":["withStyles","theme","main","backgroundColor","palette","warning","light","border","borderWidth","padding","spacing","borderRadius","shape","withTheme","props","className","children","classes","classNames","variant","globLastC","Infinity","smoothScrollTopRec","c","document","documentElement","scrollTop","body","window","requestAnimationFrame","scrollTo","smoothScrollTop","setTimeout","mutationCreateUser","mutationLoginUser","queryUser","settings","headers","Authorization","btoa","process","createUser","email","password","a","axios","post","query","source","variables","data","loginUser","validateCredentialsUser","getUser","id","user","PropsRoute","component","rest","render","routeProps","finalProps","Object","assign","React","createElement","renderMergedProps","withWidth","closeIcon","marginRight","headSection","width","blackList","common","black","height","noDecoration","textDecoration","open","onClose","anchor","menuItems","selectedItem","useEffect","onresize","isWidthUp","style","paddingTop","paddingBottom","justifyContent","disableGutters","onClick","aria-label","color","map","element","link","to","button","selected","name","disableRipple","disableTouchRipple","icon","primary","tableSortLabel","cursor","userSelect","noIcon","display","paddingFix","paddingLeft","order","orderBy","rows","onRequestSort","createSortHandler","useCallback","property","event","TableHead","TableRow","row","index","TableCell","align","numeric","sortDirection","Tooltip","title","placement","enterDelay","TableSortLabel","active","direction","Typography","label","RELEASE_TOGGLE","TOGGLE_TYPES","CONTEXT_TOGGLE_OPERATIONS","tableWrapper","overflowX","blackBackground","contentWrapper","breakpoints","down","dBlock","dNone","firstData","HighlightedBox","marginTop","marginBottom","TableActions","TableButtons","margin","onSend","project","useState","toggles","setToggles","upsertSuccess","setUpsertSuccess","onUpdate","field","value","newToggles","toggle","indexToChange","upsert","result","success","updateCondition","toggleIndex","conditions","condition","Accordion","AccordionSummary","expandIcon","AccordionDetails","length","TextField","url","InputProps","endAdornment","navigator","clipboard","writeText","onSubmit","e","preventDefault","Table","aria-labelledby","rowCount","TableBody","hover","tabIndex","scope","required","onChange","target","FormControl","Select","labelId","type","toggleType","MenuItem","uuid","Switch","checked","inputProps","indexCondition","operation","IconButton","iconButton","filter","_","indexDelete","blackIcon","onDelete","HighlightedInformation","Button","undefined","paper","borderBottomLeftRadius","borderBottomRightRadius","toolbar","scaleMinus","transform","from","spin","animation","listItemSecondaryAction","paddingRight","Paper","Toolbar","Box","alignItems","mr","ListItemText","secondary","ProjectBox","selectDashboard","pushMessageToSnackbar","projectUpsert","toggleAccountActivation","projects","setProjects","isAccountActivated","flexDirection","mt","gutterBottom","disabled","Toggles","Routing","accountActivation","wrapper","path","Dashboard","up","marginLeft","memo","appBar","boxShadow","shadows","white","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarToolbar","accountAvatar","drawerPaper","whiteSpace","smBordered","menuLink","text","iconListItem","textPrimary","mobileItemSelected","brandText","fontFamily","fontWeight","username","justifyCenter","permanentDrawerListItem","selectedTab","links","useRef","isMobileOpen","setIsMobileOpen","openMobileDrawer","closeMobileDrawer","desktop","fontSize","mobile","AppBar","position","Hidden","smUp","xsDown","ListItem","Drawer","List","ref","node","current","divider","click","ListItemIcon","NavigationDrawer","root","getPushMessageFromChild","isOpen","setIsOpen","messageInfo","setMessageInfo","queue","processQueue","shift","handleClose","reason","pushMessage","message","push","key","Date","getTime","Snackbar","disableWindowBlurListener","anchorOrigin","vertical","horizontal","autoHideDuration","onExited","ContentProps","src","mutationUpsertProject","upsertProject","owner","Main","location","setSelectedTab","hasFetchedCardChart","setHasFetchedCardChart","messages","setMessages","setUser","setPushMessageToSnackbar","fetchRandomMessages","array","i","j","Math","floor","random","shuffle","persons","iterations","curUnix","round","date","reverse","fetchUserData","state","userId","ConsecutiveSnackbarMessages","console","error"],"mappings":"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","file":"static/js/6.a8280d1c.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Typography, withStyles } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  main: {\n    backgroundColor: theme.palette.warning.light,\n    border: `${theme.border.borderWidth}px solid ${theme.palette.warning.main}`,\n    padding: theme.spacing(2),\n    borderRadius: theme.shape.borderRadius\n  }\n});\n\nfunction HighlighedInformation(props) {\n  const { className, children, classes } = props;\n  return (\n    <div className={classNames(classes.main, className ? className : null)}>\n      <Typography variant=\"body2\">{children}</Typography>\n    </div>\n  );\n}\n\nHighlighedInformation.propTypes = {\n  classes: PropTypes.object.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n    PropTypes.array\n  ]).isRequired,\n  className: PropTypes.string\n};\n\nexport default withStyles(styles, { withTheme: true })(HighlighedInformation);\n","/**\n * When called scrolls smooth to the top of the page.\n * globLastC prevents shaky animations when scrolling to\n * bottom while topscrolling.\n */\nlet globLastC = Infinity;\n\nfunction smoothScrollTopRec() {\n  const c = document.documentElement.scrollTop || document.body.scrollTop;\n  if (c > 0 && globLastC > c) {\n    globLastC = c;\n    window.requestAnimationFrame(smoothScrollTopRec);\n    window.scrollTo(0, c - c / 8);\n  } else {\n    globLastC = Infinity;\n  }\n}\n\nfunction smoothScrollTop() {\n  /**\n   * Normally this gets called from componentDidMount()\n   * Not waiting a tiny fraction of time can lead\n   * to shaky behaviour\n   */\n  setTimeout(() => {\n    smoothScrollTopRec();\n  }, 10);\n}\n\nexport default smoothScrollTop;\n","import axios from 'axios';\nimport { loader } from 'graphql.macro';\n\nconst mutationCreateUser = loader('./mutations/createUser.graphql');\nconst mutationLoginUser = loader('./mutations/loginUser.graphql');\nconst queryUser = loader('./querys/user.graphql');\n\nconst settings = {\n  headers: {\n    Authorization: `Basic ${btoa(\n      `${process.env.REACT_APP_SERVICE_USERNAME}:${process.env.REACT_APP_SERVICE_PASSWORD}`\n    )}`,\n  },\n};\n\nexport const createUser = async (\n  email,\n  password\n) => (await axios.post(\n      `${process.env.REACT_APP_SERVICE_URL}/graphql`,\n      {\n        query: mutationCreateUser.loc.source.body,\n        variables: {\n          email,\n          password,\n        },\n      },\n      settings\n    )\n  ).data.data.createUser;\n  \nexport const loginUser = async (\n  email,\n  password\n) => (await axios.post(\n      `${process.env.REACT_APP_SERVICE_URL}/graphql`,\n      {\n        query: mutationLoginUser.loc.source.body,\n        variables: {\n          email,\n          password,\n        },\n      },\n      settings\n    )\n  ).data.data.validateCredentialsUser;\n\nexport const getUser = async (\n  id\n) => (await axios.post(\n      `${process.env.REACT_APP_SERVICE_URL}/graphql`,\n      {\n        query: queryUser.loc.source.body,\n        variables: {\n          id,\n        },\n      },\n      settings\n    )\n  ).data.data.user;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route } from \"react-router-dom\";\n\nconst renderMergedProps = (component, ...rest) => {\n  const finalProps = Object.assign({}, ...rest);\n  return React.createElement(component, finalProps);\n};\n\n/**\n * Wrapper around the Router component, which makes it pass the properties\n * to it's child.\n * Taken from https://github.com/ReactTraining/react-router/issues/4105\n */\nconst PropsRoute = ({ component, ...rest }) => (\n  <Route\n    {...rest}\n    render={routeProps => renderMergedProps(component, routeProps, rest)}\n  />\n);\n\nPropsRoute.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.elementType, PropTypes.node])\n};\n\nexport default PropsRoute;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Drawer,\n  withStyles,\n  IconButton,\n  Typography,\n  withWidth,\n  isWidthUp,\n  Toolbar\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst styles = theme => ({\n  closeIcon: {\n    marginRight: theme.spacing(0.5)\n  },\n  headSection: {\n    width: 200\n  },\n  blackList: {\n    backgroundColor: theme.palette.common.black,\n    height: \"100%\"\n  },\n  noDecoration: {\n    textDecoration: \"none !important\"\n  }\n});\n\nfunction NavigationDrawer(props) {\n  const {\n    width,\n    open,\n    onClose,\n    anchor,\n    classes,\n    menuItems,\n    selectedItem,\n    theme\n  } = props;\n\n  useEffect(() => {\n    window.onresize = () => {\n      if (isWidthUp(\"sm\", width) && open) {\n        onClose();\n      }\n    };\n  }, [width, open, onClose]);\n\n  return (\n    <Drawer variant=\"temporary\" open={open} onClose={onClose} anchor={anchor}>\n      <Toolbar className={classes.headSection}>\n        <ListItem\n          style={{\n            paddingTop: theme.spacing(0),\n            paddingBottom: theme.spacing(0),\n            height: \"100%\",\n            justifyContent: anchor === \"left\" ? \"flex-start\" : \"flex-end\"\n          }}\n          disableGutters\n        >\n          <ListItemIcon className={classes.closeIcon}>\n            <IconButton onClick={onClose} aria-label=\"Close Navigation\">\n              <CloseIcon color=\"primary\" />\n            </IconButton>\n          </ListItemIcon>\n        </ListItem>\n      </Toolbar>\n      <List className={classes.blackList}>\n        {menuItems.map(element => {\n          if (element.link) {\n            return (\n              <Link\n                key={element.name}\n                to={element.link}\n                className={classes.noDecoration}\n                onClick={onClose}\n              >\n                <ListItem\n                  button\n                  selected={selectedItem === element.name}\n                  /**\n                   * We disable ripple as it will make a weird animation\n                   * with primary and secondary color\n                   */\n                  disableRipple\n                  disableTouchRipple\n                >\n                  <ListItemIcon>{element.icon}</ListItemIcon>\n                  <ListItemText\n                    primary={\n                      <Typography variant=\"subtitle1\" className=\"text-white\">\n                        {element.name}\n                      </Typography>\n                    }\n                  />\n                </ListItem>\n              </Link>\n            );\n          }\n          return (\n            <ListItem button key={element.name} onClick={element.onClick}>\n              <ListItemIcon>{element.icon}</ListItemIcon>\n              <ListItemText\n                primary={\n                  <Typography variant=\"subtitle1\" className=\"text-white\">\n                    {element.name}\n                  </Typography>\n                }\n              />\n            </ListItem>\n          );\n        })}\n      </List>\n    </Drawer>\n  );\n}\n\nNavigationDrawer.propTypes = {\n  anchor: PropTypes.string.isRequired,\n  theme: PropTypes.object.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  menuItems: PropTypes.arrayOf(PropTypes.object).isRequired,\n  classes: PropTypes.object.isRequired,\n  width: PropTypes.string.isRequired,\n  selectedItem: PropTypes.string\n};\n\nexport default withWidth()(\n  withStyles(styles, { withTheme: true })(NavigationDrawer)\n);\n","import React, { useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport {\n  Typography,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip,\n  withStyles\n} from \"@material-ui/core\";\n\nconst styles = theme => ({\n  tableSortLabel: {\n    cursor: \"text\",\n    userSelect: \"auto\",\n    color: \"inherit !important\"\n  },\n  noIcon: {\n    \"& path\": {\n      display: \"none !important\"\n    }\n  },\n  paddingFix: {\n    paddingLeft: theme.spacing(3)\n  }\n});\n\nfunction EnhancedTableHead(props) {\n  const { order, orderBy, rows, onRequestSort, classes } = props;\n\n  const createSortHandler = useCallback(\n    property => event => {\n      onRequestSort(event, property);\n    },\n    [onRequestSort]\n  );\n\n  return (\n    <TableHead>\n      <TableRow>\n        {rows.map((row, index) => (\n          <TableCell\n            key={index}\n            align={row.numeric ? \"right\" : \"inherit\"}\n            padding=\"default\"\n            sortDirection={orderBy === row.name ? order : false}\n            className={index === 0 ? classes.paddingFix : null}\n          >\n            {onRequestSort ? (\n              <Tooltip\n                title=\"Sort\"\n                placement={row.numeric ? \"bottom-end\" : \"bottom-start\"}\n                enterDelay={300}\n              >\n                <TableSortLabel\n                  active={orderBy === row.id}\n                  direction={order}\n                  onClick={createSortHandler(row.id)}\n                >\n                  <Typography variant=\"body2\">{row.label}</Typography>\n                </TableSortLabel>\n              </Tooltip>\n            ) : (\n              <TableSortLabel\n                className={classNames(classes.tableSortLabel, classes.noIcon)}\n              >\n                <Typography variant=\"body2\" className={classes.label}>\n                  {row.label}\n                </Typography>\n              </TableSortLabel>\n            )}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  onRequestSort: PropTypes.func,\n  order: PropTypes.string,\n  orderBy: PropTypes.string,\n  rows: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(EnhancedTableHead);\n","import React,{ useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Accordion,\n  AccordionSummary,\n  Typography,\n  AccordionDetails,\n  Table,\n  Switch,\n  IconButton,\n  TableBody,\n  TableCell,\n  TableRow,\n  TextField,\n  Select,\n  MenuItem,\n  FormControl,\n  Button,\n  withStyles\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport EnhancedTableHead from \"../../../shared/components/EnhancedTableHead\";\nimport HighlightedInformation from \"../../../shared/components/HighlightedInformation\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CopyIcon from \"@material-ui/icons/FileCopy\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport { v4 as uuid } from 'uuid';\n\n\nconst styles = theme => ({\n  tableWrapper: {\n    overflowX: \"auto\",\n    width: \"100%\"\n  },\n  blackBackground: {\n    backgroundColor: theme.palette.primary.main\n  },\n  contentWrapper: {\n    padding: theme.spacing(3),\n    [theme.breakpoints.down(\"xs\")]: {\n      padding: theme.spacing(2)\n    },\n    width: \"100%\"\n  },\n  dBlock: {\n    display: \"block !important\"\n  },\n  dNone: {\n    display: \"none !important\"\n  },\n  firstData: {\n    paddingLeft: theme.spacing(3)\n  },\n  HighlightedBox: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    width: \"100%\"\n  },\n  TableActions:{\n    display: \"flex\",\n    justifyContent: \"flex-end\"\n  },\n  TableButtons: {\n    margin: theme.spacing(1)\n  }\n});\n\nconst rows = [\n  {\n    id: \"name\",\n    numeric: false,\n    label: \"Name\"\n  },\n  {\n    id: \"type\",\n    numeric: false,\n    label: \"Type\"\n  },\n  {\n    id: \"state\",\n    numeric: false,\n    label: \"State\"\n  },\n  {\n    id: \"action\",\n    numeric: false,\n    label: \"Action\"\n  }\n];\n\nconst RELEASE_TOGGLE = \"release\"\nconst CONTEXT_TOGGLE = \"context\"\n\nconst TOGGLE_TYPES=[RELEASE_TOGGLE, CONTEXT_TOGGLE]\nconst CONTEXT_TOGGLE_OPERATIONS=[\n  {\n  name: \"equal\",\n  id: \"eq\",\n  },\n  {\n  name: \"not equal\",\n  id: \"ne\",\n  },\n  {\n  name: \"grater than\",\n  id: \"gt\",\n  },\n  {\n  name: \"grater equal\",\n  id: \"ge\",\n  },\n  {\n  name: \"lower than\",\n  id: \"lt\",\n  },\n  {\n  name: \"lower equal\",\n  id: \"le\",\n  },\n]\n\nfunction TogglesTable(props) {\n  const { onSend, project, classes } = props;\n  const [toggles, setToggles] = useState([]);\n  const [upsertSuccess, setUpsertSuccess] = useState(\"\");\n\n  const onCreate = () => {\n    setToggles([...toggles, {name: undefined,\n      type: \"release\",\n      conditions: [],\n      value: false}])\n  }\n  const onDelete = (index) => {\n    setToggles(toggles.filter((_, indexDelete) => index !== indexDelete))\n  }\n\n  const onUpdate = (index, field, value) => {\n    const newToggles = toggles\n      .map((toggle, indexToChange) => index === indexToChange \n                  ? {...toggle, [field]: value } \n                  : toggle )\n    setToggles(newToggles)\n  }\n  \n  const upsert = async () => {\n    const result = await onSend(toggles);\n    setUpsertSuccess(result.success);\n  }\n\n  useEffect(() => {\n      setToggles(project.toggles)\n  }, [project]);\n  const updateCondition = (toggleIndex, conditions, index, value) =>\n    onUpdate(toggleIndex, \"conditions\", conditions.map((condition, indexToChange) => index === indexToChange ? value : condition))\n\n  return (\n    <Accordion>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography>{project.name}</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.dBlock}>\n      {toggles.length > 0 && (<TextField className={classes.HighlightedBox}\n        label=\"Toggles URL\"\n        value={project.url}\n        InputProps={{endAdornment: <CopyIcon onClick={() => {navigator.clipboard.writeText(project.url)}}/>}}\n      />)}\n        <form onSubmit={(e) => {\n          e.preventDefault();\n          upsert();\n        }}>\n      {\n        toggles.length > 0\n        ? (\n          <Table aria-labelledby=\"tableTitle\" className={classes.HighlightedBox}>\n          <EnhancedTableHead rowCount={toggles.length} rows={rows} />\n          <TableBody>\n            {toggles\n              .map((toggle, index) => (\n                <TableRow key={`toggle_${index}`} hover tabIndex={-1}>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    className={classes.firstData}\n                  >\n                    <TextField required\n                      variant=\"outlined\"\n                      label=\"Field\" \n                      value={toggle.name} \n                      onChange={(event) => onUpdate(index, \"name\", event.target.value)}\n                    />\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    <FormControl variant=\"outlined\">\n                      <Select required\n                        labelId=\"operation-drop-down\"\n                        value={toggle.type}\n                        onChange={(event) => onUpdate(index, \"type\", event.target.value)}\n                      >\n                        {\n                          TOGGLE_TYPES.map(toggleType => (\n                            <MenuItem key={`toggleType${uuid()}`} value={toggleType}>{toggleType}</MenuItem>\n                          ))\n                        }\n                      </Select>\n                    </FormControl>\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {toggle.type === RELEASE_TOGGLE\n                      ? (\n                        <Switch\n                          color=\"secondary\"\n                          checked={toggle.value}\n                          onChange={event => onUpdate(index, \"value\", event.target.checked)}\n                          inputProps={{\n                            \"aria-label\": toggle.value\n                              ? \"Deactivate Toggle\"\n                              : \"Activate Toggle\"\n                          }}\n                        />)\n                      : toggle.conditions.map((condition, indexCondition) => (<div key={`toggle_${index}_condition_${indexCondition}`}>\n                            <TextField  variant=\"outlined\" required label=\"Field\" value={condition.field} onChange={event => updateCondition(index, toggle.conditions, indexCondition, {...condition, field: event.target.value})}/>\n                            <FormControl variant=\"outlined\">\n                              <Select required\n                                labelId=\"operation-drop-down\"\n                                value={condition.operation}\n                                onChange={event => updateCondition(index, toggle.conditions, indexCondition, {...condition, operation: event.target.value})}\n                              >\n                                {\n                                  CONTEXT_TOGGLE_OPERATIONS.map((operation) => (\n                                    <MenuItem key={`OperationType${uuid()}`} value={operation.id}>{operation.name}</MenuItem>\n                                  ))\n                                }\n                              </Select>\n                            </FormControl>\n                            <TextField variant=\"outlined\" required label=\"Value\" value={condition.value} onChange={event => updateCondition(index, toggle.conditions, indexCondition, {...condition, value: event.target.value})}/>\n                        <IconButton\n                        className={classes.iconButton}\n                        onClick={() => {\n                          onUpdate(index, \"conditions\", toggle.conditions.filter((_, indexDelete) => indexCondition !== indexDelete));\n                        }}\n                        aria-label=\"Delete\"\n                      >\n                        <DeleteIcon className={classes.blackIcon} />\n                      </IconButton>\n                      </div>))\n                      }\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    { \n                      toggle.type === \"context\" \n                      && <>\n                        <IconButton\n                          className={classes.iconButton}\n                          onClick={() => {\n                            onUpdate(index, \"conditions\", [...toggle.conditions, { operation: \"eq\"}]);\n                          }}\n                          aria-label=\"Delete\"\n                        >\n                          <AddIcon className={classes.blackIcon} />\n                        </IconButton>\n                      </>\n                    }\n                    <IconButton\n                      className={classes.iconButton}\n                      onClick={() => onDelete(index)}\n                      aria-label=\"Delete\"\n                    >\n                      <DeleteIcon className={classes.blackIcon} />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n        )\n      : (<HighlightedInformation className={classes.HighlightedBox}>\n          No toggles defined yet.\n        </HighlightedInformation>)\n      }\n      { upsertSuccess === true && (\n              <HighlightedInformation className={classes.HighlightedBox}>\n                Project Updated Correctly\n              </HighlightedInformation>\n            )\n      }\n      { upsertSuccess === false && (\n          <HighlightedInformation className={classes.HighlightedBox}>\n            🙇‍♂️  Oh no!!! we could not update your project. We might have a bug or our cloud provider is down. Please try again in a few minutes . 🙇‍♂️\n          </HighlightedInformation>\n        )\n      }\n      <div className={classes.TableActions}>\n        <Button type=\"button\" variant=\"contained\" color=\"primary\" aria-label=\"add\" onClick={onCreate} className={classes.TableButtons}>\n        <AddIcon/> Add\n        </Button>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" aria-label=\"update\" className={classes.TableButtons}>\n        <LoopIcon/> Update\n        </Button>\n      </div>\n      </form>\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n\nTogglesTable.propTypes = {\n  theme: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  project: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(TogglesTable);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Paper,\n  Toolbar,\n  ListItemText,\n  Box,\n  withStyles\n} from \"@material-ui/core\";\n\nconst styles = theme => ({\n  paper: {\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0\n  },\n  toolbar: { justifyContent: \"space-between\" },\n  scaleMinus: {\n    transform: \"scaleX(-1)\"\n  },\n  \"@keyframes spin\": {\n    from: { transform: \"rotate(359deg)\" },\n    to: { transform: \"rotate(0deg)\" }\n  },\n  spin: { animation: \"$spin 2s infinite linear\" },\n  listItemSecondaryAction: { paddingRight: theme.spacing(1) }\n});\n\nfunction AccountInformationArea(props) {\n  const { classes } = props;\n  return (\n    <Paper className={classes.paper}>\n      <Toolbar className={classes.toolbar}>\n        <Box display=\"flex\" alignItems=\"center\">\n          <Box mr={2}>\n            <ListItemText\n              primary=\"Plan\"\n              secondary={\"Hobby\"}\n              className=\"mr-2\"\n            />\n          </Box>\n        </Box>\n      </Toolbar>\n    </Paper>\n  );\n}\n\nAccountInformationArea.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  accountActivation: PropTypes.func.isRequired,\n  isAccountActivated: PropTypes.bool.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(AccountInformationArea);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Typography, Box, Button, withStyles } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Toggles from \"./Toggles\";\nimport AccountInformationArea from \"./AccountInformationArea\";\n\nconst styles = theme => ({\n  ProjectBox: {\n    marginBottom: theme.spacing(1),\n  }\n})\nfunction Dashboard(props) {\n  const {\n    user,\n    selectDashboard,\n    pushMessageToSnackbar,\n    projectUpsert,\n    toggleAccountActivation,\n    classes\n  } = props;\n\n  const [projects, setProjects] = useState([]);\n  useEffect(selectDashboard, [selectDashboard]);\n  useEffect(() => {\n    if(user)\n      setProjects(user.projects)\n  }, [user]);\n\n  return (\n    <Fragment>\n    <AccountInformationArea\n      isAccountActivated={false}\n      toggleAccountActivation={toggleAccountActivation}\n    />\n      <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"flex-end\" mt={4} className={classes.ProjectBox}>\n      <Box width=\"100%\" ><Typography variant=\"subtitle1\" gutterBottom>\n          Your Projects\n        </Typography></Box>\n        <Button \n          variant=\"contained\" \n          color=\"primary\" \n          aria-label=\"add\" \n          disabled={projects.length > 0 }\n          onClick={() => {setProjects([...projects, {\n            name: `Default${projects.length+1}`,\n            toggles: []\n          }])}}>\n        <AddIcon/> Add\n        </Button>\n      </Box>\n      {\n        projects.map(project => (<Toggles\n            pushMessageToSnackbar={pushMessageToSnackbar}\n            project={project}\n            onSend={(toggles) => projectUpsert(user.id, project.name, toggles)}\n          />\n        ))\n      }\n    </Fragment>\n  );\n}\n\nDashboard.propTypes = {\n  user: PropTypes.string,\n  pushMessageToSnackbar: PropTypes.func,\n  selectDashboard: PropTypes.func.isRequired,\n  isAccountActivated: PropTypes.bool.isRequired,\n  toggleAccountActivation: PropTypes.func,\n  projectUpsert: PropTypes.func,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(Dashboard);","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Switch } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core\";\nimport Dashboard from \"./dashboard/Dashboard\";\nimport PropsRoute from \"../../shared/components/PropsRoute\";\n\nconst styles = (theme) => ({\n  wrapper: {\n    margin: theme.spacing(1),\n    width: \"auto\",\n    [theme.breakpoints.up(\"xs\")]: {\n      width: \"95%\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      marginTop: theme.spacing(4),\n      marginBottom: theme.spacing(4),\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      width: \"90%\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      width: \"82.5%\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      width: \"70%\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n});\n\nfunction Routing(props) {\n  const {\n    user,\n    classes,\n    pushMessageToSnackbar,\n    selectDashboard,\n    isAccountActivated,\n    accountActivation,\n    projectUpsert,\n  } = props;\n  return (\n    <div className={classes.wrapper}>\n      <Switch>\n        <PropsRoute\n          path=\"\"\n          component={Dashboard}\n          pushMessageToSnackbar={pushMessageToSnackbar}\n          selectDashboard={selectDashboard}\n          isAccountActivated={isAccountActivated}\n          accountActivation={accountActivation}\n          projectUpsert={projectUpsert}\n          user={user}\n        />\n      </Switch>\n    </div>\n  );\n}\n\nRouting.propTypes = {\n  user: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  pushMessageToSnackbar: PropTypes.func,\n  selectDashboard: PropTypes.func.isRequired,\n  isAccountActivated: PropTypes.bool.isRequired,\n  accountActivation: PropTypes.func,\n  projectUpsert: PropTypes.func,\n};\n\nexport default withStyles(styles, { withTheme: true })(memo(Routing));\n","import React, { Fragment, useRef, useCallback, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Drawer,\n  List,\n  IconButton,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Hidden,\n  Tooltip,\n  Box,\n  withStyles,\n  isWidthUp,\n  withWidth,\n} from \"@material-ui/core\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport NavigationDrawer from \"../../../shared/components/NavigationDrawer\";\n\nconst styles = (theme) => ({\n  appBar: {\n    boxShadow: theme.shadows[6],\n    backgroundColor: theme.palette.common.white,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"100%\",\n      marginLeft: 0,\n    },\n  },\n  appBarToolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3),\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n      paddingLeft: theme.spacing(4),\n      paddingRight: theme.spacing(4),\n    },\n  },\n  accountAvatar: {\n    backgroundColor: theme.palette.secondary.main,\n    height: 24,\n    width: 24,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: theme.spacing(1.5),\n      marginRight: theme.spacing(1.5),\n    },\n  },\n  drawerPaper: {\n    height: \"100%vh\",\n    whiteSpace: \"nowrap\",\n    border: 0,\n    width: theme.spacing(7),\n    overflowX: \"hidden\",\n    marginTop: theme.spacing(8),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n    backgroundColor: theme.palette.common.black,\n  },\n  smBordered: {\n    [theme.breakpoints.down(\"xs\")]: {\n      borderRadius: \"50% !important\",\n    },\n  },\n  menuLink: {\n    textDecoration: \"none\",\n    color: theme.palette.text.primary,\n  },\n  iconListItem: {\n    width: \"auto\",\n    borderRadius: theme.shape.borderRadius,\n    paddingTop: 11,\n    paddingBottom: 11,\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  textPrimary: {\n    color: theme.palette.primary.main,\n  },\n  mobileItemSelected: {\n    backgroundColor: `${theme.palette.primary.main} !important`,\n  },\n  brandText: {\n    fontFamily: \"'Baloo Bhaijaan', cursive\",\n    fontWeight: 400,\n  },\n  username: {\n    paddingLeft: 0,\n    paddingRight: theme.spacing(2),\n  },\n  justifyCenter: {\n    justifyContent: \"center\",\n  },\n  permanentDrawerListItem: {\n    justifyContent: \"center\",\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n});\n\nfunction NavBar(props) {\n  const { selectedTab, user, classes, width } = props;\n  // Will be use to make website more accessible by screen readers\n  const links = useRef([]);\n  const [isMobileOpen, setIsMobileOpen] = useState(false);\n\n  const openMobileDrawer = useCallback(() => {\n    setIsMobileOpen(true);\n  }, [setIsMobileOpen]);\n\n  const closeMobileDrawer = useCallback(() => {\n    setIsMobileOpen(false);\n  }, [setIsMobileOpen]);\n\n\n\n  const menuItems = [\n    {\n      link: \"/c/dashboard\",\n      name: \"Dashboard\",\n      onClick: closeMobileDrawer,\n      icon: {\n        desktop: (\n          <DashboardIcon\n            className={\n              selectedTab === \"Dashboard\" ? classes.textPrimary : \"text-white\"\n            }\n            fontSize=\"small\"\n          />\n        ),\n        mobile: <DashboardIcon className=\"text-white\" />,\n      },\n    }\n  ];\n  return (\n    <Fragment>\n      <AppBar position=\"sticky\" className={classes.appBar}>\n        <Toolbar className={classes.appBarToolbar}>\n          <Box display=\"flex\" alignItems=\"center\">\n            <Hidden smUp>\n              <Box mr={1}>\n                <IconButton\n                  aria-label=\"Open Navigation\"\n                  onClick={openMobileDrawer}\n                  color=\"primary\"\n                >\n                  <MenuIcon />\n                </IconButton>\n              </Box>\n            </Hidden>\n            <Hidden xsDown>\n              <Typography\n                variant=\"h4\"\n                className={classes.brandText}\n                display=\"inline\"\n                color=\"secondary\"\n              >\n                T\n              </Typography>\n              <Typography\n                variant=\"h4\"\n                className={classes.brandText}\n                display=\"inline\"\n                color=\"primary\"\n              >\n                o\n              </Typography>\n              <Typography\n                variant=\"h4\"\n                className={classes.brandText}\n                display=\"inline\"\n                color=\"secondary\"\n              >\n                ggl\n              </Typography>\n              <Typography\n                variant=\"h4\"\n                className={classes.brandText}\n                display=\"inline\"\n                color=\"primary\"\n              >\n                ee\n              </Typography>\n            </Hidden>\n          </Box>\n          <Box\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n            alignItems=\"center\"\n            width=\"100%\"\n          >\n            <ListItem\n              disableGutters\n              className={classNames(classes.iconListItem, classes.smBordered)}\n            >\n              {isWidthUp(\"sm\", width) && (\n                <ListItemText\n                  className={classes.username}\n                  primary={\n                    <Typography color=\"textPrimary\">{user.email}</Typography>\n                  }\n                />\n              )}\n            </ListItem>\n          </Box>\n          <Link\n                to=\"/\"\n              >\n            <PowerSettingsNewIcon />\n          </Link>\n        </Toolbar>\n      </AppBar>\n      <Hidden xsDown>\n        <Drawer //  both drawers can be combined into one for performance\n          variant=\"permanent\"\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          open={false}\n        >\n          <List>\n            {menuItems.map((element, index) => (\n              <Link\n                to={element.link}\n                className={classes.menuLink}\n                onClick={element.onClick}\n                key={index}\n                ref={(node) => {\n                  links.current[index] = node;\n                }}\n              >\n                <Tooltip\n                  title={element.name}\n                  placement=\"right\"\n                  key={element.name}\n                >\n                  <ListItem\n                    selected={selectedTab === element.name}\n                    button\n                    divider={index !== menuItems.length - 1}\n                    className={classes.permanentDrawerListItem}\n                    onClick={() => {\n                      links.current[index].click();\n                    }}\n                    aria-label={\n                      element.name === \"Logout\"\n                        ? \"Logout\"\n                        : `Go to ${element.name}`\n                    }\n                  >\n                    <ListItemIcon className={classes.justifyCenter}>\n                      {element.icon.desktop}\n                    </ListItemIcon>\n                  </ListItem>\n                </Tooltip>\n              </Link>\n            ))}\n          </List>\n        </Drawer>\n      </Hidden>\n      <NavigationDrawer\n        menuItems={menuItems.map((element) => ({\n          link: element.link,\n          name: element.name,\n          icon: element.icon.mobile,\n          onClick: element.onClick,\n        }))}\n        anchor=\"left\"\n        open={isMobileOpen}\n        selectedItem={selectedTab}\n        onClose={closeMobileDrawer}\n      />\n    </Fragment>\n  );\n}\n\nNavBar.propTypes = {\n  user: PropTypes.object.isRequired,\n  selectedTab: PropTypes.string.isRequired,\n  width: PropTypes.string.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withWidth()(withStyles(styles, { withTheme: true })(NavBar));\n","import React, { useCallback, useState, useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Snackbar, withStyles } from \"@material-ui/core\";\n\nconst styles = (theme) => ({\n  root: {\n    backgroundColor: theme.palette.primary.main,\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n});\n\nfunction ConsecutiveSnackbars(props) {\n  const { classes, getPushMessageFromChild } = props;\n  const [isOpen, setIsOpen] = useState(false);\n  const [messageInfo, setMessageInfo] = useState({});\n  const queue = useRef([]);\n\n  const processQueue = useCallback(() => {\n    if (queue.current.length > 0) {\n      setMessageInfo(queue.current.shift());\n      setIsOpen(true);\n    }\n  }, [setMessageInfo, setIsOpen, queue]);\n\n  const handleClose = useCallback((_, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setIsOpen(false);\n  }, [setIsOpen]);\n\n  const pushMessage = useCallback(message => {\n    queue.current.push({\n      message,\n      key: new Date().getTime(),\n    });\n    if (isOpen) {\n      // immediately begin dismissing current message\n      // to start showing new one\n      setIsOpen(false);\n    } else {\n      processQueue();\n    }\n  }, [queue, isOpen, setIsOpen, processQueue]);\n\n  useEffect(() => {\n    getPushMessageFromChild(pushMessage);\n  }, [getPushMessageFromChild, pushMessage]);\n\n  return (\n    <Snackbar\n      disableWindowBlurListener\n      key={messageInfo.key}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}\n      open={isOpen}\n      autoHideDuration={6000}\n      onClose={handleClose}\n      onExited={processQueue}\n      ContentProps={{\n        classes: {\n          root: classes.root,\n        },\n      }}\n      message={\n        <span>{messageInfo.message ? messageInfo.message.text : null}</span>\n      }\n    />\n  );\n\n}\n\nConsecutiveSnackbars.propTypes = {\n  getPushMessageFromChild: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ConsecutiveSnackbars);\n","const data = [\n  {\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image1.jpg`,\n    name: \"Markus\",\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image2.jpg`,\n    name: \"David\",\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image3.jpg`,\n    name: \"Arold\",\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image4.jpg`,\n    name: \"Joanic\",\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image5.jpg`,\n    name: \"Sophia\",\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image6.jpg`,\n    name: \"Aaron\",\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image7.jpg`,\n    name: \"Steven\",\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image8.jpg`,\n    name: \"Felix\",\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image9.jpg`,\n    name: \"Vivien\",\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image10.jpg`,\n    name: \"Leonie\",\n  },\n];\n\nexport default data;","import axios from 'axios';\nimport { loader } from 'graphql.macro';\n\nconst mutationUpsertProject = loader('./mutations/upsertProject.graphql');\n\nconst settings = {\n  headers: {\n    Authorization: `Basic ${btoa(\n      `${process.env.REACT_APP_SERVICE_USERNAME}:${process.env.REACT_APP_SERVICE_PASSWORD}`\n    )}`,\n  },\n};\n\nexport const upsertProject = async (\n  owner,\n  name,\n  toggles,\n) => {\n  return (await axios.post(\n      `${process.env.REACT_APP_SERVICE_URL}/graphql`,\n      {\n        query: mutationUpsertProject.loc.source.body,\n        variables: {\n            owner,\n            name,\n            toggles,\n        },\n      },\n      settings\n    )\n  ).data.data.upsertProject;\n    }\n","import React, { memo, useCallback, useState, useEffect, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core\";\nimport Routing from \"./Routing\";\nimport NavBar from \"./navigation/NavBar\";\nimport ConsecutiveSnackbarMessages from \"../../shared/components/ConsecutiveSnackbarMessages\";\nimport smoothScrollTop from \"../../shared/functions/smoothScrollTop\";\nimport persons from \"../dummy_data/persons\";\nimport { upsertProject } from \"../../../services/project\";\nimport { getUser } from \"../../../services/user\";\n\nconst styles = (theme) => ({\n  main: {\n    marginLeft: theme.spacing(9),\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: 0,\n    },\n  },\n});\n\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n\nfunction Main(props) {\n  const { classes, location } = props;\n  const [selectedTab, setSelectedTab] = useState(null);\n  const [hasFetchedCardChart, setHasFetchedCardChart] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [user, setUser] = useState(null);\n  const [pushMessageToSnackbar, setPushMessageToSnackbar] = useState(null);\n\n  const fetchRandomMessages = useCallback(() => {\n    shuffle(persons);\n    const messages = [];\n    const iterations = persons.length;\n    const oneDaySeconds = 60 * 60 * 24;\n    let curUnix = Math.round(\n      new Date().getTime() / 1000 - iterations * oneDaySeconds\n    );\n    for (let i = 0; i < iterations; i += 1) {\n      const person = persons[i];\n      const message = {\n        id: i,\n        src: person.src,\n        date: curUnix,\n        text: \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr sed.\",\n      };\n      curUnix += oneDaySeconds;\n      messages.push(message);\n    }\n    messages.reverse();\n    setMessages(messages);\n  }, [setMessages]);\n\n  const fetchUserData = useCallback(async() => {\n    setUser( await getUser(location.state.userId))\n  }, [setUser, location]);\n\n  const selectDashboard = useCallback(() => {\n    smoothScrollTop();\n    document.title = \"Toggle - Dashboard\";\n    setSelectedTab(\"Dashboard\");\n    if (!hasFetchedCardChart) {\n      setHasFetchedCardChart(true);\n    }\n  }, [\n    setSelectedTab,\n    hasFetchedCardChart,\n    setHasFetchedCardChart,\n  ]);\n\n  const getPushMessageFromChild = useCallback(\n    (pushMessage) => {\n      setPushMessageToSnackbar(() => pushMessage);\n    },\n    [setPushMessageToSnackbar]\n  );\n\n  useEffect(() => {\n    fetchUserData();\n    fetchRandomMessages();\n  }, [\n    fetchRandomMessages,\n    fetchUserData,\n  ]);\n\n  return (\n    user && <Fragment>\n      <NavBar\n        selectedTab={selectedTab}\n        messages={messages}\n        user={user}\n      />\n      <ConsecutiveSnackbarMessages\n        getPushMessageFromChild={getPushMessageFromChild}\n      />\n      <main className={classNames(classes.main)}>\n        <Routing\n          pushMessageToSnackbar={pushMessageToSnackbar}\n          selectDashboard={selectDashboard}\n          isAccountActivated={() => console.error(\"Not Implemented\")}\n          accountActivation={() => console.error(\"Not Implemented\")}\n          projectUpsert={upsertProject}\n          user={user}\n        />\n      </main>\n    </Fragment>\n  );\n}\n\nMain.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(memo(Main));\n"],"sourceRoot":""}